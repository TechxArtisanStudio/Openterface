name: ci 
on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-build]
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      # install additional dependencies here
      - name: Install additional dependencies
        run: pip install -r requirements.txt
      - name: Get latest package release version
        id: get_version
        run: |
          echo "QT_VERSION=$(curl -sL https://api.github.com/repos/TechxArtisanStudio/Openterface_QT/releases/latest | grep '"tag_name":'| sed -E 's/.*"([^"]+)".*/\1/')" >> $GITHUB_ENV
          echo "ANDROID_VERSION=$(curl -sL https://api.github.com/repos/TechxArtisanStudio/Openterface_Android/releases/latest | grep '"tag_name":'| sed -E 's/.*"([^"]+)".*/\1/')" >> $GITHUB_ENV
          echo "MACOS_VERSION=$(curl -sL https://apps.apple.com/us/app/openterface-mini-kvm/id6478481082 | grep -o 'Version v*[0-9]*\.[0-9]*' | head -1 | awk '{print $2}')" >> $GITHUB_ENV
      - name: Update mkdocs config
        run: |
          sed -i "/^extra:/a\  qt_version: ${{ env.QT_VERSION }}" mkdocs.yml
          sed -i "/^extra:/a\  android_version: ${{ env.ANDROID_VERSION }}" mkdocs.yml
          sed -i "/^extra:/a\  macos_version: ${{ env.MACOS_VERSION }}" mkdocs.yml
      - name: Copy .well-known directory
        run: |
          mkdir -p site/.well-known
          cp -r docs/.well-known/* site/.well-known/
      - name: Deploy Documentation
        env:
          MK_SECRET_TOKEN: ${{ secrets.MK_SECRET_TOKEN }}
        run: |
          mkdocs gh-deploy --force